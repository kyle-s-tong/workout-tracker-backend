swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: 'Swagger JsonApi'
  termsOfService: 'http://swagger.io/terms/'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: localhost
schemes:
  - https
  - http
paths:
  /users/:
    get:
      tags:
        - users
      summary: 'User List'
      operationId: listUser
      produces:
        - application/json
      parameters: {  }
      responses:
        200:
          description: 'successful operation'
          schema:
            type: object
            properties:
              jsonapi:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.0'
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: '/users?page[number]=1&page[size]=100'
                  first:
                    type: string
                    example: '/users?page[number]=1&page[size]=100'
                  last:
                    type: string
                    example: '/users?page[number]=1&page[size]=100'
                  prev:
                    type: string
                    example: 'null'
                  next:
                    type: string
                    example: 'null'
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                      example: 12
                    type:
                      type: string
                      example: users
                    attributes:
                      $ref: '#/definitions/User'
                    relationships:
                      properties: {  }
    post:
      tags:
        - users
      summary: 'Add User'
      operationId: addUser
      produces:
        - application/json
      parameters:
        -
          in: body
          name: body
          description: addUser
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
      responses:
        200:
          description: 'successful operation'
          schema:
            type: object
            properties:
              jsonapi:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.0'
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: /users
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
  '/users/{User_id}':
    patch:
      tags:
        - users
      summary: 'Edit User'
      operationId: editUser
      produces:
        - application/json
      parameters:
        -
          in: body
          name: body
          description: editUser
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
        -
          name: User_id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 'successful operation'
          schema:
            type: object
            properties:
              jsonapi:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.0'
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: /users
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
    delete:
      tags:
        - users
      summary: 'Delete User'
      operationId: deleteUser
      produces:
        - application/json
      parameters:
        -
          name: User_id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 'successful operation'
          schema:
            type: object
            properties:
              jsonapi:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.0'
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: /users
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
    get:
      tags:
        - users
      summary: 'Get User'
      operationId: viewUser
      produces:
        - application/json
      parameters:
        -
          name: User_id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: 'successful operation'
          schema:
            type: object
            properties:
              jsonapi:
                type: object
                properties:
                  version:
                    type: string
                    example: '1.0'
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: /users
              data:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12
                  type:
                    type: string
                    example: users
                  attributes:
                    $ref: '#/definitions/User'
                  relationships:
                    properties: {  }
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
      roles:
        type: object
      password:
        type: string
externalDocs:
  description: 'Find out more about Swagger'
  url: 'http://swagger.io'
